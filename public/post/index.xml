<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on UTechLab</title>
    <link>https://utechjapan.net/post/</link>
    <description>Recent content in Posts on UTechLab</description>
    <generator>Hugo -- 0.139.3</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Dec 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://utechjapan.net/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Setting Up a Self-Hosted Password Manager with Bitwarden or Vaultwarden</title>
      <link>https://utechjapan.net/post/setting-up-a-self-hosted-password-manager-with-bitwarden-or-vaultwarden/</link>
      <pubDate>Fri, 06 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/setting-up-a-self-hosted-password-manager-with-bitwarden-or-vaultwarden/</guid>
      <description>&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A server or virtual machine (minimum: 1 GB RAM and 1 CPU).&lt;/li&gt;
&lt;li&gt;Docker installed on your server.&lt;/li&gt;
&lt;li&gt;A static IP or domain name for accessing the password manager.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-decide-between-bitwarden-and-vaultwarden&#34;&gt;Step 1: Decide Between Bitwarden and Vaultwarden&lt;/h2&gt;
&lt;h3 id=&#34;bitwarden&#34;&gt;&lt;strong&gt;Bitwarden&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Official version with robust features and frequent updates.&lt;/li&gt;
&lt;li&gt;Requires more resources and supports paid features like OTP generation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;vaultwarden-formerly-bitwarden_rs&#34;&gt;&lt;strong&gt;Vaultwarden (formerly Bitwarden_rs)&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Lightweight, community-built alternative to Bitwarden.&lt;/li&gt;
&lt;li&gt;Perfect for homelabs or low-resource servers.&lt;/li&gt;
&lt;li&gt;Compatible with most Bitwarden clients.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For most homelab users, &lt;strong&gt;Vaultwarden&lt;/strong&gt; is recommended due to its lightweight nature.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting Up a WireGuard VPN to Access Your HomeLab Remotely</title>
      <link>https://utechjapan.net/post/setting-up-a-wireguard-vpn-to-access-your-homelab-remotely/</link>
      <pubDate>Fri, 06 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/setting-up-a-wireguard-vpn-to-access-your-homelab-remotely/</guid>
      <description>&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A server or virtual machine to host the WireGuard VPN.&lt;/li&gt;
&lt;li&gt;Basic knowledge of networking and port forwarding.&lt;/li&gt;
&lt;li&gt;A static public IP or dynamic DNS for remote access.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-install-wireguard&#34;&gt;Step 1: Install WireGuard&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Update and install WireGuard&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt install -y wireguard
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Verify the installation&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wg --version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-2-generate-keys&#34;&gt;Step 2: Generate Keys&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Generate the server’s private and public keys&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wg genkey | tee server_private.key | wg pubkey &amp;gt; server_public.key
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Save the keys securely&lt;/strong&gt;:&lt;br&gt;
The private key will be in &lt;code&gt;server_private.key&lt;/code&gt;, and the public key will be in &lt;code&gt;server_public.key&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automating Backups in Your HomeLab with Borg and Rclone</title>
      <link>https://utechjapan.net/post/automating-backups-in-your-homelab-with-borg-and-rclone/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/automating-backups-in-your-homelab-with-borg-and-rclone/</guid>
      <description>&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A server or device to act as the backup source.&lt;/li&gt;
&lt;li&gt;BorgBackup installed on the source.&lt;/li&gt;
&lt;li&gt;Rclone for cloud storage synchronization.&lt;/li&gt;
&lt;li&gt;A cloud storage account (e.g., Google Drive, AWS S3, Backblaze).&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-install-borgbackup&#34;&gt;Step 1: Install BorgBackup&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Update and install BorgBackup&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt install -y borgbackup
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Verify the installation&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;borg --version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-2-initialize-a-borg-repository&#34;&gt;Step 2: Initialize a Borg Repository&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create a directory for backups&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p ~/backups/borg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Initialize the Borg repository&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building a High-Availability Setup for Your HomeLab Using Keepalived</title>
      <link>https://utechjapan.net/post/building-a-high-availability-setup-for-your-homelab-using-keepalived/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/building-a-high-availability-setup-for-your-homelab-using-keepalived/</guid>
      <description>&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;At least two servers or virtual machines (referred to as primary and backup nodes).&lt;/li&gt;
&lt;li&gt;A Linux-based OS installed on both (Ubuntu 20.04 or newer is recommended).&lt;/li&gt;
&lt;li&gt;A shared virtual IP address (VIP) for failover.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-install-keepalived&#34;&gt;Step 1: Install Keepalived&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Log into both nodes and update the system&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt upgrade -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install Keepalived on both nodes&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install -y keepalived
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Verify the installation&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building a Lightweight Kubernetes Cluster with K3s</title>
      <link>https://utechjapan.net/post/building-a-lightweight-kubernetes-cluster-with-k3s/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/building-a-lightweight-kubernetes-cluster-with-k3s/</guid>
      <description>&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;At least two nodes (one master, one worker) with Linux installed (e.g., Ubuntu 20.04 or newer).&lt;/li&gt;
&lt;li&gt;2 GB RAM and 2 CPUs per node (minimum recommended).&lt;/li&gt;
&lt;li&gt;Basic networking knowledge.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-prepare-the-nodes&#34;&gt;Step 1: Prepare the Nodes&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Update each node&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt upgrade -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install required dependencies&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install -y curl apt-transport-https
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Set unique hostnames for each node&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;On the master node:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo hostnamectl set-hostname master-node
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On the worker node(s):&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creating a Secure File Transfer System with SFTP and Docker</title>
      <link>https://utechjapan.net/post/creating-a-secure-file-transfer-system-with-sftp-and-docker/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/creating-a-secure-file-transfer-system-with-sftp-and-docker/</guid>
      <description>&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A server or virtual machine with Docker installed.&lt;/li&gt;
&lt;li&gt;Basic understanding of networking and file permissions.&lt;/li&gt;
&lt;li&gt;An SSH client for testing SFTP connections.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-install-docker-if-not-installed&#34;&gt;Step 1: Install Docker (If Not Installed)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Update the system packages&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt upgrade -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install Docker&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install -y docker.io
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Enable and start Docker&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl enable docker &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo systemctl start docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-2-set-up-the-sftp-directory&#34;&gt;Step 2: Set Up the SFTP Directory&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create a directory structure for SFTP users&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploying a Proxmox VE Server for Virtualization in Your HomeLab</title>
      <link>https://utechjapan.net/post/deploying-a-proxmox-ve-server-for-virtualization-in-your-homelab/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/deploying-a-proxmox-ve-server-for-virtualization-in-your-homelab/</guid>
      <description>&lt;p&gt;Proxmox Virtual Environment (Proxmox VE) is a powerful, open-source platform for virtualization. It allows you to run virtual machines (VMs) and containers efficiently, making it perfect for homelabs. This guide walks you through deploying a Proxmox VE server, enabling you to consolidate workloads and experiment with virtualized environments.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A dedicated machine for Proxmox VE (minimum specs: 4 GB RAM, 64-bit processor, and 32 GB storage).&lt;/li&gt;
&lt;li&gt;Proxmox VE ISO file from the &lt;a href=&#34;https://www.proxmox.com/en/downloads&#34;&gt;Proxmox download page&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A USB drive (at least 8 GB) for creating bootable media.&lt;/li&gt;
&lt;li&gt;A reliable internet connection.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-prepare-the-installation-media&#34;&gt;Step 1: Prepare the Installation Media&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Download the Proxmox VE ISO file from the official website.&lt;br&gt;
&lt;img alt=&#34;Proxmox Interface&#34; loading=&#34;lazy&#34; src=&#34;https://utechjapan.net/images/downloadsproxmox.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;Use a tool like &lt;a href=&#34;https://rufus.ie/&#34;&gt;Rufus&lt;/a&gt; or &lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;balenaEtcher&lt;/a&gt; to create a bootable USB drive with the Proxmox ISO.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-2-install-proxmox-ve&#34;&gt;Step 2: Install Proxmox VE&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Insert the bootable USB into your server and boot from it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HomeLab Essentials: Choosing the Right Hardware for Your Projects</title>
      <link>https://utechjapan.net/post/choosing-the-right-hardware-for-your-projects/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/choosing-the-right-hardware-for-your-projects/</guid>
      <description>&lt;p&gt;Building a homelab is an exciting way to explore technology and learn new skills. However, choosing the right hardware can make or break your experience. Whether you’re hosting a Pi-hole server, deploying Kubernetes, or running a media server, this guide will help you select the best hardware for your homelab needs.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;key-factors-to-consider&#34;&gt;Key Factors to Consider&lt;/h2&gt;
&lt;h3 id=&#34;1-purpose-of-the-homelab&#34;&gt;&lt;strong&gt;1. Purpose of the Homelab&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Identify your goals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Basic Projects&lt;/strong&gt;: DNS servers, lightweight apps, and monitoring tools.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Intermediate Projects&lt;/strong&gt;: Virtualization, Docker, and small Kubernetes clusters.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Advanced Projects&lt;/strong&gt;: High-performance computing, large-scale storage, and multi-node clusters.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-hardware-budget&#34;&gt;&lt;strong&gt;2. Hardware Budget&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Your budget will dictate your hardware choices:&lt;/p&gt;</description>
    </item>
    <item>
      <title>HomeLab Networking: Configuring pfSense for Advanced Firewall Rules</title>
      <link>https://utechjapan.net/post/homelab-networking-configuring-pfsense-for-advanced-firewall-rules/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/homelab-networking-configuring-pfsense-for-advanced-firewall-rules/</guid>
      <description>&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A dedicated device or virtual machine to install pfSense.&lt;/li&gt;
&lt;li&gt;A basic understanding of networking concepts.&lt;/li&gt;
&lt;li&gt;Access to your home network’s router for setup.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-install-pfsense&#34;&gt;Step 1: Install pfSense&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Download pfSense ISO&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visit the &lt;a href=&#34;https://www.pfsense.org/download/&#34;&gt;official pfSense website&lt;/a&gt; and download the ISO.&lt;/li&gt;
&lt;li&gt;Choose the correct architecture for your hardware (e.g., AMD64).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create a Bootable USB Drive&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo dd &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/path/to/pfsense.iso of&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/dev/sdX bs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1M
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;/path/to/pfsense.iso&lt;/code&gt; with the path to the ISO file.&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;/dev/sdX&lt;/code&gt; with the correct USB drive identifier.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install pfSense on Your Device&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>HomeLab Networking: Configuring VLANs for Segmented Traffic</title>
      <link>https://utechjapan.net/post/homelab-networking-configuring-vlans-for-segmented-traffic/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/homelab-networking-configuring-vlans-for-segmented-traffic/</guid>
      <description>&lt;p&gt;A well-designed network is essential for a secure and efficient homelab. VLANs (Virtual Local Area Networks) allow you to segment your network into separate logical groups, improving security, performance, and manageability. In this guide, we’ll cover the basics of VLANs and walk you through setting them up in your homelab.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A managed switch that supports VLANs (e.g., TP-Link, Netgear, or Ubiquiti).&lt;/li&gt;
&lt;li&gt;A router or firewall capable of VLAN tagging (e.g., pfSense, OPNSense).&lt;/li&gt;
&lt;li&gt;Basic understanding of IP addresses and subnetting.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-understand-vlan-basics&#34;&gt;Step 1: Understand VLAN Basics&lt;/h2&gt;
&lt;h3 id=&#34;what-are-vlans&#34;&gt;&lt;strong&gt;What Are VLANs?&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;VLANs divide a physical network into multiple virtual networks. Devices on different VLANs cannot communicate directly without a router or Layer 3 switch.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hosting Your Own Media Streaming Service with Jellyfin and Traefik</title>
      <link>https://utechjapan.net/post/hosting-your-own-media-streaming-service-with-jellyfin-and-traefik/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/hosting-your-own-media-streaming-service-with-jellyfin-and-traefik/</guid>
      <description>&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A server or virtual machine with Docker installed.&lt;/li&gt;
&lt;li&gt;Media files (movies, TV shows, music) stored on the server.&lt;/li&gt;
&lt;li&gt;A domain name (optional, but recommended for HTTPS setup).&lt;/li&gt;
&lt;li&gt;Basic knowledge of Docker and reverse proxies.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-install-docker-if-not-installed&#34;&gt;Step 1: Install Docker (If Not Installed)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Update the system packages&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt upgrade -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install Docker&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install -y docker.io
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Enable Docker to start on boot&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Build a Home DNS Server with Pi-hole for Network-Wide Ad Blocking</title>
      <link>https://utechjapan.net/post/how-to-build-a-home-dns-server-with-pi-hole-for-network-wide-ad-blocking/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/how-to-build-a-home-dns-server-with-pi-hole-for-network-wide-ad-blocking/</guid>
      <description>&lt;p&gt;Are you tired of intrusive ads, tracking scripts, and sluggish internet performance caused by unnecessary network traffic? A Pi-hole DNS server can solve these problems by acting as a network-wide ad blocker and improving overall browsing speed. This blog post will walk you through the process of setting up Pi-hole at home, step by step.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A Raspberry Pi (recommended: Raspberry Pi 3 or newer) or any machine that can run Docker.&lt;/li&gt;
&lt;li&gt;MicroSD card (if using a Raspberry Pi).&lt;/li&gt;
&lt;li&gt;Home router with access to DNS settings.&lt;/li&gt;
&lt;li&gt;Basic understanding of Linux commands.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-install-the-operating-system&#34;&gt;Step 1: Install the Operating System&lt;/h2&gt;
&lt;p&gt;If using a Raspberry Pi:&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Create a Media Server at Home with Plex and Jellyfin</title>
      <link>https://utechjapan.net/post/how-to-create-a-media-server-at-home-with-plex-and-jellyfin/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/how-to-create-a-media-server-at-home-with-plex-and-jellyfin/</guid>
      <description>&lt;p&gt;Creating a home media server is one of the most rewarding homelab projects, allowing you to centralize and stream your media collection across all devices. Plex and Jellyfin are two popular tools for setting up a media server, each offering unique features. This guide walks you through installing and configuring both options so you can pick the one that works best for you.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A dedicated machine (e.g., Raspberry Pi, NAS, or a repurposed desktop/laptop).&lt;/li&gt;
&lt;li&gt;A storage device for your media files (e.g., HDDs, SSDs, or a NAS).&lt;/li&gt;
&lt;li&gt;A stable internet connection for remote access and metadata fetching.&lt;/li&gt;
&lt;li&gt;Basic knowledge of Linux commands (optional if using GUI-based installation).&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-decide-between-plex-and-jellyfin&#34;&gt;Step 1: Decide Between Plex and Jellyfin&lt;/h2&gt;
&lt;h3 id=&#34;plex&#34;&gt;&lt;strong&gt;Plex&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pros&lt;/strong&gt;: Polished interface, remote streaming capabilities, wide device compatibility.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cons&lt;/strong&gt;: Some features require a subscription (Plex Pass).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;jellyfin&#34;&gt;&lt;strong&gt;Jellyfin&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pros&lt;/strong&gt;: 100% free and open source, privacy-focused, and customizable.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cons&lt;/strong&gt;: Slightly less polished interface compared to Plex.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Choose your preferred software based on these factors, or try both to see which suits your needs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Deploy Nextcloud for Private Cloud Storage in Your HomeLab</title>
      <link>https://utechjapan.net/post/how-to-deploy-nextcloud-for-private-cloud-storage-in-your-homelab/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/how-to-deploy-nextcloud-for-private-cloud-storage-in-your-homelab/</guid>
      <description>&lt;p&gt;Nextcloud is an open-source platform for private cloud storage and collaboration. By hosting Nextcloud in your homelab, you can securely store files, manage calendars, and sync data across devices—all without relying on third-party services. This guide walks you through installing and configuring Nextcloud on your homelab server.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A server or virtual machine with at least:
&lt;ul&gt;
&lt;li&gt;2 GB RAM and 1 CPU (for small deployments).&lt;/li&gt;
&lt;li&gt;20 GB of storage (or more for large file collections).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Linux installed (Ubuntu 20.04 or newer is recommended).&lt;/li&gt;
&lt;li&gt;A static IP or domain name.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-update-and-prepare-your-server&#34;&gt;Step 1: Update and Prepare Your Server&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Log into your server&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ssh user@&amp;lt;server_ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;Update the system packages&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;Install necessary dependencies&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt install -y apache2 mariadb-server libapache2-mod-php  
php php-mysql php-xml php-mbstring php-curl php-zip php-gd unzip
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;step-2-set-up-the-database&#34;&gt;Step 2: Set Up the Database&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Secure MariaDB&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo mysql_secure_installation
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Follow the prompts to set a root password and remove unnecessary settings.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Monitoring and Alerting in Your HomeLab with Prometheus and Grafana</title>
      <link>https://utechjapan.net/post/monitoring-and-alerting-in-your-homelab-with-prometheus-and-grafana/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/monitoring-and-alerting-in-your-homelab-with-prometheus-and-grafana/</guid>
      <description>&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A server or virtual machine to run Prometheus and Grafana (recommended: 2 GB RAM, 2 CPUs).&lt;/li&gt;
&lt;li&gt;Docker installed (or native installation on Linux).&lt;/li&gt;
&lt;li&gt;Basic understanding of system metrics and networking.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-install-prometheus&#34;&gt;Step 1: Install Prometheus&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create a Prometheus data directory&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p ~/prometheus/data
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create a Prometheus configuration file&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nano ~/prometheus/prometheus.yml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Add the following content to scrape metrics from &lt;code&gt;localhost&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;global&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;scrape_interval&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;15s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;scrape_configs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;job_name&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prometheus&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;static_configs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;targets&lt;/span&gt;: [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;localhost:9090&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Run Prometheus using Docker&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Running a Pi-hole and Unbound Setup for Enhanced DNS Privacy</title>
      <link>https://utechjapan.net/post/running-a-pi-hole-and-unbound-setup-for-enhanced-dns-privacy/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/running-a-pi-hole-and-unbound-setup-for-enhanced-dns-privacy/</guid>
      <description>&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A Raspberry Pi or server running Pi-hole.&lt;/li&gt;
&lt;li&gt;Basic knowledge of Linux commands.&lt;/li&gt;
&lt;li&gt;An active internet connection.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-update-your-pi-hole-installation&#34;&gt;Step 1: Update Your Pi-hole Installation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Log into your Pi-hole server via SSH&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh pi@&amp;lt;pi-hole_ip_address&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Update Pi-hole to the latest version&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pihole -up
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ensure the system is up to date&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt upgrade -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-2-install-unbound&#34;&gt;Step 2: Install Unbound&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install Unbound on your Pi-hole server&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install unbound -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Verify the installation&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Running Docker Containers on a Raspberry Pi: A Step-by-Step Guide</title>
      <link>https://utechjapan.net/post/running-docker-containers-on-a-raspberry-pi-a-step-by-step-guide/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/running-docker-containers-on-a-raspberry-pi-a-step-by-step-guide/</guid>
      <description>&lt;p&gt;Docker containers are lightweight and portable, making them a great tool for running applications in your homelab. A Raspberry Pi is an ideal low-cost, low-power device for hosting Docker containers. This guide will walk you through setting up Docker on a Raspberry Pi and deploying your first container.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A Raspberry Pi (recommended: Raspberry Pi 3, 4, or newer).&lt;/li&gt;
&lt;li&gt;MicroSD card with Raspberry Pi OS Lite installed.&lt;/li&gt;
&lt;li&gt;A stable internet connection.&lt;/li&gt;
&lt;li&gt;Basic knowledge of Linux commands.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-update-and-prepare-your-raspberry-pi&#34;&gt;Step 1: Update and Prepare Your Raspberry Pi&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Log into your Raspberry Pi via SSH&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ssh pi@&amp;lt;raspberry_pi_ip_address&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;Update and upgrade the system packages&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;Install prerequisite packages&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;step-2-install-docker-on-the-raspberry-pi&#34;&gt;Step 2: Install Docker on the Raspberry Pi&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Download the official Docker installation script&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;curl -fsSL https://get.docker.com -o get-docker.sh
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;Run the installation script&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo sh get-docker.sh
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;Add your user to the &lt;code&gt;docker&lt;/code&gt; group&lt;/strong&gt; (replace &lt;code&gt;pi&lt;/code&gt; with your username if different):&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo usermod -aG docker pi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Log out and back in to apply the changes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Securing Your HomeLab: Best Practices for Firewall and VPN Setup</title>
      <link>https://utechjapan.net/post/securing-your-homelab-best-practices-for-firewall-and-vpn-setup/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/securing-your-homelab-best-practices-for-firewall-and-vpn-setup/</guid>
      <description>&lt;p&gt;Running a homelab introduces exciting possibilities, but it also opens potential security vulnerabilities. Securing your homelab with a firewall and VPN ensures safe access to your systems and protects your network from unauthorized intrusions. In this guide, we’ll explore best practices for setting up a secure firewall and VPN for your homelab.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A dedicated router or a device to run firewall software (e.g., pfSense, OPNSense).&lt;/li&gt;
&lt;li&gt;VPN software or hardware (e.g., WireGuard, OpenVPN).&lt;/li&gt;
&lt;li&gt;Basic networking knowledge for configuring IPs and port forwarding.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-set-up-a-dedicated-firewall&#34;&gt;Step 1: Set Up a Dedicated Firewall&lt;/h2&gt;
&lt;h3 id=&#34;option-1-install-pfsense&#34;&gt;&lt;strong&gt;Option 1: Install pfSense&lt;/strong&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Download pfSense&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Get the latest ISO from the &lt;a href=&#34;https://www.pfsense.org/download/&#34;&gt;pfSense download page&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create a Bootable USB Drive&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Use &lt;a href=&#34;https://rufus.ie/&#34;&gt;Rufus&lt;/a&gt; or similar tools to flash the ISO onto a USB drive.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Install pfSense on Your Firewall Device&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Boot from the USB drive and follow the installation wizard.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Initial Configuration&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Access the pfSense web interface at &lt;code&gt;http://192.168.1.1&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Configure the WAN (internet) and LAN (internal network) interfaces.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;option-2-install-opnsense&#34;&gt;&lt;strong&gt;Option 2: Install OPNSense&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;OPNSense is a robust alternative to pfSense. The installation steps are nearly identical.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Self-Hosting GitLab: A Guide to Version Control in Your HomeLab</title>
      <link>https://utechjapan.net/post/self-hosting-gitlab-a-guide-to-version-control-in-your-homelab/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/self-hosting-gitlab-a-guide-to-version-control-in-your-homelab/</guid>
      <description>&lt;p&gt;Self-hosting GitLab in your homelab allows you to manage code repositories, CI/CD pipelines, and collaborative development projects in a secure, private environment. This guide walks you through installing and configuring GitLab on your homelab server.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A server or virtual machine with at least:
&lt;ul&gt;
&lt;li&gt;4 GB RAM and 2 CPUs (recommended for smaller deployments).&lt;/li&gt;
&lt;li&gt;20 GB of storage (more for large repositories or CI/CD).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A Linux-based OS (Ubuntu 20.04 or newer is recommended).&lt;/li&gt;
&lt;li&gt;A static IP or domain name (for remote access).&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-update-and-prepare-your-server&#34;&gt;Step 1: Update and Prepare Your Server&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Log into your server&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ssh user@&amp;lt;server_ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;Update the system packages&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt install -y curl openssh-server ca-certificates
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;step-2-install-gitlab&#34;&gt;Step 2: Install GitLab&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Add the GitLab repository&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;curl -s [https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.deb.sh](https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.deb.sh) | sudo bash
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;Install GitLab&lt;/strong&gt;:&lt;br&gt;
Replace &lt;code&gt;&amp;lt;your-domain&amp;gt;&lt;/code&gt; with your server’s domain or IP:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo EXTERNAL_URL=&amp;#34;http://&amp;lt;your-domain&amp;gt;&amp;#34; apt install -y gitlab-ee
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;Run the GitLab reconfiguration script&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo gitlab-ctl reconfigure
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;step-3-access-the-gitlab-web-interface&#34;&gt;Step 3: Access the GitLab Web Interface&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Open your web browser and go to &lt;code&gt;http://&amp;lt;your-domain&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Set a password for the default &lt;code&gt;root&lt;/code&gt; user on the first login.&lt;/li&gt;
&lt;li&gt;Log in using the &lt;code&gt;root&lt;/code&gt; username and your new password.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-4-configure-gitlab&#34;&gt;Step 4: Configure GitLab&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Set up email notifications&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Edit the &lt;code&gt;/etc/gitlab/gitlab.rb&lt;/code&gt; file and configure SMTP settings.&lt;/li&gt;
&lt;li&gt;Reconfigure GitLab:
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo gitlab-ctl reconfigure
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;Create a new project&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Navigate to the &lt;strong&gt;Projects&lt;/strong&gt; tab in the web interface.&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;New Project&lt;/strong&gt; and follow the wizard to create your repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-5-connect-to-your-repository&#34;&gt;Step 5: Connect to Your Repository&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Clone the repository to your local machine&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git clone http://&amp;lt;your-domain&amp;gt;/&amp;lt;namespace&amp;gt;/&amp;lt;repository&amp;gt;.git
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;Push your code to the repository&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd &amp;lt;repository&amp;gt; git add . git commit -m &amp;#34;Initial commit&amp;#34; git push origin main
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;step-6-enable-ssl-optional&#34;&gt;Step 6: Enable SSL (Optional)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Install Certbot for Let&amp;rsquo;s Encrypt&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt install -y certbot
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;Generate an SSL certificate&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo certbot certonly --standalone -d &amp;lt;your-domain&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;Update GitLab configuration&lt;/strong&gt;:&lt;br&gt;
Edit &lt;code&gt;/etc/gitlab/gitlab.rb&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;external_url &amp;#34;https://&amp;lt;your-domain&amp;gt;&amp;#34; nginx[&amp;#39;ssl_certificate&amp;#39;] = &amp;#34;/etc/letsencrypt/live/&amp;lt;your-domain&amp;gt;/fullchain.pem&amp;#34; nginx[&amp;#39;ssl_certificate_key&amp;#39;] = &amp;#34;/etc/letsencrypt/live/&amp;lt;your-domain&amp;gt;/privkey.pem&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;strong&gt;Reconfigure GitLab&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo gitlab-ctl reconfigure
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;step-7-configure-cicd-pipelines-optional&#34;&gt;Step 7: Configure CI/CD Pipelines (Optional)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Add a &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; file to your repository root:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;yaml
stages:
  - build

build-job:
  stage: build
  script:
    - echo &amp;#34;Hello, World!&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;strong&gt;Commit and push the file&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git add .gitlab-ci.yml
git commit -m &amp;#34;Add CI/CD pipeline&amp;#34;
git push origin main
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;&lt;strong&gt;2. Check the &lt;strong&gt;CI/CD &amp;gt; Pipelines&lt;/strong&gt; section in the GitLab web interface to monitor the job.&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;faqs&#34;&gt;FAQs&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Q: Is GitLab free to use?&lt;/strong&gt;&lt;br&gt;
A: Yes, GitLab offers a free tier with all essential features for self-hosting. Paid tiers include advanced features like enhanced security and analytics.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting Up a Kubernetes (K8s) Cluster at Home for Beginners</title>
      <link>https://utechjapan.net/post/setting-up-a-kubernetes-k8s-cluster-at-home-for-beginners/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://utechjapan.net/post/setting-up-a-kubernetes-k8s-cluster-at-home-for-beginners/</guid>
      <description>&lt;p&gt;Kubernetes (K8s) is a powerful container orchestration platform used to manage applications at scale. Building a Kubernetes cluster in your homelab allows you to experiment with cloud-native concepts, deploy containerized applications, and learn skills for production-grade environments. In this guide, we’ll walk through setting up a basic Kubernetes cluster at home.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-youll-need&#34;&gt;What You’ll Need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;At least two devices (can be physical machines, VMs, or Raspberry Pis):
&lt;ul&gt;
&lt;li&gt;One as a control plane (master node).&lt;/li&gt;
&lt;li&gt;One or more as worker nodes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Linux installed on each device (Ubuntu 20.04 or newer is recommended).&lt;/li&gt;
&lt;li&gt;A reliable network connection.&lt;/li&gt;
&lt;li&gt;Basic understanding of Linux commands.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;step-1-prepare-the-nodes&#34;&gt;Step 1: Prepare the Nodes&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Install Ubuntu&lt;/strong&gt; on all devices (or use your preferred Linux distro).&lt;/li&gt;
&lt;li&gt;Update and upgrade the system on each node:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Set static IP addresses for all nodes to ensure stability in the cluster. Configure this via &lt;code&gt;/etc/netplan&lt;/code&gt; or your router&amp;rsquo;s DHCP settings.&lt;/li&gt;
&lt;li&gt;Disable swap on all nodes to meet Kubernetes requirements:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo swapoff -a
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To make it permanent, edit &lt;code&gt;/etc/fstab&lt;/code&gt; and comment out the swap entry.&lt;br&gt;
5. Install &lt;code&gt;containerd&lt;/code&gt; as the container runtime:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
